<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnChamado1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>